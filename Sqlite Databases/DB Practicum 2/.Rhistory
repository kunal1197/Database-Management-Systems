}
#print(DateYear)
if (length(DateMonth1) != 0)
{
DateMonth <- DateMonth1
}
else if (length(DateMonth2) != 0)
{
DateMonth <- substring(DateYear2, 6, 8)
}
else
{
DateMonth <- "Jan"
}
title <- xmlValue(aJournalNode[[3]])
if (DateMonth == "Jan")
{
DateMonth = "-01-"
} else if (DateMonth == "Feb") {
DateMonth = "-02-"
}
else if (DateMonth == "Mar") {
DateMonth = "-03-"
}
else if (DateMonth == "Apr") {
DateMonth = "-04-"
}
else if (DateMonth == "May") {
DateMonth = "-05-"
}
else if (DateMonth == "Jun") {
DateMonth = "-06-"
}
else if (DateMonth == "Jul") {
DateMonth = "-07-"
}
else if (DateMonth == "Aug") {
DateMonth = "-08-"
}
else if (DateMonth == "Sep") {
DateMonth = "-09-"
}
else if (DateMonth == "Oct") {
DateMonth = "-10-"
}
else if (DateMonth == "Nov") {
DateMonth = "-11-"
}
else if (DateMonth == "Dec") {
DateMonth = "-12-"
}
Date <- paste(DateYear, DateMonth, sep="")
Date <- paste(Date, "01", sep="")
newJournalInfo.df <- data.frame(ISSN, Volume, Issue, Date, title,
stringsAsFactors = F)
return(newJournalInfo.df)
}
AllJournal <- data.frame()
for (journal in xPathJournal)
{
AllJournal <- rbind(AllJournal, parseJournal(journal))
}
#NlmUniqueID <- xmlValue(xpathSApply(xmlObj,"/PubmedArticleSet/PubmedArticle/MedlineCitation/MedlineJournalInfo/NlmUniqueID"))
#for (i in 1:19)
#{
#  AllJournal$NlmUniqueID[i] <- NlmUniqueID[i]
#}
for (i in 1:19) {
AllJournal$medlineKey[i] <- i
}
colnames(AllJournal) <- c('ISSN', 'volume', 'issue', 'publicationDate', 'title', 'medlineKey')
print(AllJournal)
dbWriteTable(mydb, name = "Journal", AllJournal, append = TRUE, row.names = 0)
# Article Data Frame
Article.df <- paste("/PubmedArticleSet/PubmedArticle/MedlineCitation", sep="")
xPathArticle <- xpathSApply(xmlObj, Article.df)
parseArticle <- function (anArticleNode)
{
# parse the address into its components
pmid <- xmlValue(anArticleNode[[1]])
articleTitle <- xmlValue(xpathSApply(anArticleNode[[5]], "ArticleTitle"))
if (length(articleTitle) == 0)
{
articleTitle <- xmlValue(xpathSApply(anArticleNode[[4]], "ArticleTitle"))
}
dateCreated <- xmlValue(anArticleNode[[2]])
dateYYYY <- paste(substring(dateCreated, 1, 4))
dateMM <- paste(substring(dateCreated, 5, 6))
dateDD <- paste(substring(dateCreated, 7, 8))
dateCreated <- paste(dateYYYY,"-", sep="")
dateCreated <- paste(dateCreated, dateMM, sep="")
dateCreated <- paste(dateCreated, "-", sep = "")
dateCreated <- paste(dateCreated, dateDD, sep="")
articleDateElectronic <- xmlValue(xpathSApply(anArticleNode[[5]], "ArticleDate"))
if (length(articleDateElectronic) == 0) {
articleDateElectronic <- xmlValue(anArticleNode[[2]])
}
newJournalInfo.df <- data.frame(pmid, articleTitle, dateCreated,
articleDateElectronic, stringsAsFactors = F)
return(newJournalInfo.df)
}
#print(parseArticle(xPathArticle[[7]]))
AllArticle <- data.frame()
for (Article in xPathArticle)
{
AllArticle <- rbind(AllArticle, parseArticle(Article))
}
for (i in 1:19) {
AllArticle$journalID[i] <- i
}
colnames(AllArticle) <- c('PMID', 'articleTitle', 'dateCreated', 'articleDateElectronic', 'journalID')
print(AllArticle)
dbWriteTable(mydb, name = "Article", AllArticle, append = TRUE, row.names = 0)
# History Data Frame
History.df <- paste("/PubmedArticleSet/PubmedArticle", sep="")
xPathHistory <- xpathSApply(xmlObj, History.df)
parseHistory <- function (aHistoryNode)
{
# parse the address into its components
PMID <- xmlValue(xpathSApply(aHistoryNode[[1]], "PMID"))
rdateYYYY <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='received']/Year"))
rdateMM <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='received']/Month"))
rdateDD <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='received']/Day"))
receivedDate <- paste(rdateYYYY,"-", sep="")
receivedDate <- paste(receivedDate, rdateMM, sep="")
receivedDate <- paste(receivedDate, "-", sep = "")
receivedDate <- paste(receivedDate, rdateDD, sep="")
if (length(rdateYYYY) == 0 && length(rdateMM) == 0 && length(rdateDD) == 0) {
receivedDate <- ""
}
adateYYYY <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='accepted']/Year"))
adateMM <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='accepted']/Month"))
adateDD <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='accepted']/Day"))
acceptedDate <- paste(adateYYYY,"-", sep="")
acceptedDate <- paste(acceptedDate, adateMM, sep="")
acceptedDate <- paste(acceptedDate, "-", sep = "")
acceptedDate <- paste(acceptedDate, adateDD, sep="")
if (length(adateYYYY) == 0 && length(adateMM) == 0 && length(adateDD) == 0) {
acceptedDate <- ""
}
edateYYYY <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='epublish']/Year"))
edateMM <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='epublish']/Month"))
edateDD <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='epublish']/Day"))
ePublishDate <- paste(edateYYYY,"-", sep="")
ePublishDate <- paste(ePublishDate, edateMM, sep="")
ePublishDate <- paste(ePublishDate, "-", sep = "")
ePublishDate <- paste(ePublishDate, edateDD, sep="")
if (length(edateYYYY) == 0 && length(edateMM) == 0 && length(edateDD) == 0) {
ePublishDate <- ""
}
endateYYYY <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='entrez']/Year"))
endateMM <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='entrez']/Month"))
endateDD <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='entrez']/Day"))
entryDate <- paste(endateYYYY,"-", sep="")
entryDate <- paste(entryDate, endateMM, sep="")
entryDate <- paste(entryDate, "-", sep = "")
entryDate <- paste(entryDate, endateDD, sep="")
if (length(endateYYYY) == 0 && length(endateMM) == 0 && length(endateDD) == 0) {
entryDate <- ""
}
pdateYYYY <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='pubmed']/Year"))
pdateMM <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='pubmed']/Month"))
pdateDD <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='pubmed']/Day"))
pubmedDate <- paste(pdateYYYY,"-", sep="")
pubmedDate <- paste(pubmedDate, pdateMM, sep="")
pubmedDate <- paste(pubmedDate, "-", sep = "")
pubmedDate <- paste(pubmedDate, pdateDD, sep="")
if (length(pdateYYYY) == 0 && length(pdateMM) == 0 && length(pdateDD) == 0) {
pubmedDate <- ""
}
mdateYYYY <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='medline']/Year"))
mdateMM <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='medline']/Month"))
mdateDD <- xmlValue(xpathSApply(aHistoryNode[[2]], "History/PubMedPubDate[@PubStatus='medline']/Day"))
medlineDate <- paste(mdateYYYY,"-", sep="")
medlineDate <- paste(medlineDate, mdateMM, sep="")
medlineDate <- paste(medlineDate, "-", sep = "")
medlineDate <- paste(medlineDate, mdateDD, sep="")
if (length(mdateYYYY) == 0 && length(mdateMM) == 0 && length(mdateDD) == 0) {
medlineDate <- ""
}
newHistory.df <- data.frame(PMID, receivedDate, acceptedDate, ePublishDate,
entryDate, pubmedDate, medlineDate,
stringsAsFactors = F)
return(newHistory.df)
}
AllHistory <- data.frame()
for (history in xPathHistory)
{
AllHistory <- rbind(AllHistory, parseHistory(history))
}
colnames(AllHistory) <- c('PMID', 'receivedDate', 'acceptedDate', 'ePublishDate', 'entryDate', 'pubmedDate', 'medlineDate')
print(AllHistory)
dbWriteTable(mydb, name = "History", AllHistory, append = TRUE, row.names = 0)
# AuthorList Data Frame
AuthorList.df <- paste("/PubmedArticleSet/PubmedArticle/MedlineCitation/PMID", sep="")
xPathAuthorList <- xpathSApply(xmlObj, AuthorList.df)
parseAuthorList <- function (anAuthorListNode)
{
# parse the address into its components
PMID <- xmlValue(anAuthorListNode[[1]])
newAuthorList.df <- data.frame(PMID, stringsAsFactors = F)
return(newAuthorList.df)
}
AllAuthorList <- data.frame()
for (AuthorList in xPathAuthorList)
{
AllAuthorList <- rbind(AllAuthorList, parseAuthorList(AuthorList))
}
for (i in 1:19) {
AllAuthorList$authorID[i] <- i
}
colnames(AllAuthorList) <- c('PMID', 'authorID')
print(AllAuthorList)
dbWriteTable(mydb, name = "AuthorList", AllAuthorList, append = TRUE, row.names = 0)
query="INSERT INTO AUTHORSUMMARYFACT (AuthorID,JournalID,Quarter,PMID)
SELECT  AuthorList.authorID AS AuthorID,ArticleDim.journalID AS JournalID, ArticleDim.quarter_of_year AS Quarter, ArticleDim.PMIDFactKey AS PMID
FROM AuthorList
JOIN ArticleDim
ON AuthorList.PMID = ArticleDim.PMIDFactKey
JOIN Author
ON AuthorList.authorID = Author.authorID";
AUTHORSUMMARYFACT<-dbGetQuery(mydb, query)
AUTHORSUMMARYFACT
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM AUTHORSUMMARYFACT"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data WHERE Quarter = 1 GROUP BY Quarter")
results_SecondQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data  WHERE Quarter = 2 GROUP BY Quarter")
results_ThirdQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data WHERE Quarter = 3 GROUP BY Quarter")
results_FourthQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data WHERE Quarter = 4 GROUP BY Quarter")
H <- c(strtoi(results_FirstQuarter), strtoi(results_SecondQuarter), strtoi(results_ThirdQuarter), strtoi(results_FourthQuarter))
M <- c("Jan-Mar", "Apr-Jun", "Jul-Sep", "Oct-Dec")
# Plot the bar chart
barplot(H,names.arg=M,xlab="Quarter",ylab="Publications Per Quarter",col=c("yellow", "pink", "blue", "green"),
main="Column chart",border="red")
# Create the data for the chart.
v <- c(strtoi(results_FirstQuarter), strtoi(results_SecondQuarter), strtoi(results_ThirdQuarter), strtoi(results_FourthQuarter))
M <- c("Jan-Mar", "Apr-Jun", "Jul-Sep", "Oct-Dec")
# Plot the bar chart.
plot(v, type = "o", col = "red", xaxt = "n", xlab = "Quarter", ylab = "Publications Per Quarter",
main = "Line Graph Chart")
axis(1,                         # Define x-axis manually
at = 1:4,
labels = M)
dbDisconnect(mydb)
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM AUTHORSUMMARYFACT"
publication_count_data = dbGetQuery(mydb, sqlFactData)
# This is used to establish a connection to the database and set its file path.
# Library to interact with MySQL
library(RMySQL)
# Settings
db_user <- 'practicum1'
db_password <- 'practicum1' # The top-secret password :)
db_name <- 'practicum2_2'
db_host <- 'practicum1.c5r3vp6fuc73.us-east-2.rds.amazonaws.com'
db_port <- 3306
# Read data from db
mydb <- dbConnect(RMySQL::MySQL(), user = db_user, password = db_password, dbname = db_name,
host = db_host, port = db_port)
options(warn=-1)
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM AUTHORSUMMARYFACT"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data WHERE Quarter = 1 GROUP BY Quarter")
results_SecondQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data  WHERE Quarter = 2 GROUP BY Quarter")
results_ThirdQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data WHERE Quarter = 3 GROUP BY Quarter")
results_FourthQuarter <- sqldf("SELECT COUNT(Quarter) AS Count_Per_Quarter
FROM rs_publication_count_data WHERE Quarter = 4 GROUP BY Quarter")
H <- c(strtoi(results_FirstQuarter), strtoi(results_SecondQuarter), strtoi(results_ThirdQuarter), strtoi(results_FourthQuarter))
M <- c("Jan-Mar", "Apr-Jun", "Jul-Sep", "Oct-Dec")
# Plot the bar chart
barplot(H,names.arg=M,xlab="Quarter",ylab="Publications Per Quarter",col=c("yellow", "pink", "blue", "green"),
main="Column chart",border="red")
# Create the data for the chart.
v <- c(strtoi(results_FirstQuarter), strtoi(results_SecondQuarter), strtoi(results_ThirdQuarter), strtoi(results_FourthQuarter))
M <- c("Jan-Mar", "Apr-Jun", "Jul-Sep", "Oct-Dec")
# Plot the bar chart.
plot(v, type = "o", col = "red", xaxt = "n", xlab = "Quarter", ylab = "Publications Per Quarter",
main = "Line Graph Chart")
axis(1,                         # Define x-axis manually
at = 1:4,
labels = M)
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
M <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,names.arg=M,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
M <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,names.arg=M,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
M <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,names.arg=M,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
M <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
M <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,names.arg=M,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
K <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,names.arg=K,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
L <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
K <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(L,names.arg=K,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
L <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
K <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(L,xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
M <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,names.arg=M, xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
H <- "";
H <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
M <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(H,names.arg=M, xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year, year_num FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
xplot <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
yplot <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(xplot,names.arg=yplot, xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
print(results_FirstYear)
print(results_SecondYear)
print(results_ThirdYear)
xplot <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
yplot <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(xplot,names.arg=yplot, xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
options(sqldf.driver = "SQLite")
library(sqldf)
sqlFactData = "SELECT * FROM ArticleDim"
publication_count_data = dbGetQuery(mydb, sqlFactData)
rs_publication_count_data <- (publication_count_data)
results_FirstYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year FROM rs_publication_count_data WHERE year_num = 2011 GROUP BY year_num")
results_SecondYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year FROM rs_publication_count_data WHERE year_num = 2012 GROUP BY year_num")
results_ThirdYear <- sqldf("SELECT COUNT(year_num) AS Count_Per_Year FROM rs_publication_count_data WHERE year_num = 2013 GROUP BY year_num")
xplot <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
yplot <- c("2011", "2012", "2013")
# Plot the bar chart
barplot(xplot,names.arg=yplot, xlab="Year",ylab="Publications Per Year",col=c("yellow", "pink", "green"),
main="Column chart",border="red")
# Create the data for the chart.
xplot <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
yplot <- c("2011", "2012", "2013")
# Plot the bar chart.
plot(xplot, type = "o", col = "red", xaxt = "n", xlab = "Year", ylab = "Publications Per Year",
main = "Line Graph Chart")
axis(1,                         # Define x-axis manually
at = 1:4,
labels = yplot)
# Create the data for the chart.
xplot <- c(strtoi(results_FirstYear), strtoi(results_SecondYear), strtoi(results_ThirdYear))
yplot <- c("2011", "2012", "2013")
# Plot the bar chart.
plot(xplot, type = "o", col = "red", xaxt = "n", xlab = "Year", ylab = "Publications Per Year",
main = "Line Graph Chart")
axis(1,                         # Define x-axis manually
at = 1:3,
labels = yplot)
